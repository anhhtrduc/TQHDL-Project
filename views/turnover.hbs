<svg width='1000' height='500'></svg>

<script>
		d3.json('http://localhost:3000/turnover_year', (error, data) => {
                var svg = d3.select('svg'),
                    margin = 200,
                    width = svg.attr('width') - margin,
                    height = svg.attr('height') - margin;
                var xScale = d3.scaleBand().range([0, width]).padding(0.4);
                var yScale = d3.scaleLinear().range([height, 0]);
                var g = svg
                    .append('g')
                    .attr('transform', 'translate(' + 100 + ',' + 100 + ')');
                xScale.domain(
                    data.map((d) => {
                        return d.year;
                    })
                );
                yScale.domain([
                    0,
                    d3.max(data, (d) => {
                        return d.price;
                    }),
                ]);
                g.append('g')
                    .attr('transform', 'translate(0,' + height + ')')
                    .call(d3.axisBottom(xScale));
                g.append('g').call(
                    d3
                        .axisLeft(yScale)
                        .tickFormat((d) => {
                            return d;
                        })
                        .ticks(10)
                );
                g.append('g')
                    .attr('transform', 'translate(0,' + height + ')')
                    .call(d3.axisBottom(xScale))
                    .append('text')
                    .attr('y', height - 250)
                    .attr('x', width - 100)
                    .attr('text-anchor', 'end')
                    .attr('stroke', 'black')
                    .text('Year');
                g.selectAll('.bar')
                    .data(data)
                    .enter()
                    .append('rect')
                    .attr('class', 'bar')
                    .attr('x', (d) => {
                        return xScale(d.year);
                    })
                    .attr('y', (d) => {
                        return yScale(d.price);
                    })
                    .attr('width', xScale.bandwidth())
                    .attr('height', (d) => {
                        return height - yScale(d.price);
                    });
            });
		
	
    
    
</script>